# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/android:api-28-alpha

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/code

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

#      - run:
#          name: Run Lint and Unit Tests
#          command: ./gradlew lint test
#      - store_artifacts:
#          path: app/build/reports
#          destination: app/unit-tests
#      - store_test_results:
#          path: app/build/test-results
#      - store_artifacts:
#          path: library/build/reports
#          destination: library/unit-tests
#      - store_test_results:
#          path: library/build/test-results

      - run:
          name: Build Mock and test APKs
          command: |
            ./gradlew :app:assembleMockDebug
            ./gradlew :app:assembleMockDebugAndroidTest

#      - run:
#          name: Store Service Account
#          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
#      - run: |
#          sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
#          sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
#          sudo gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run
            --app app/build/outputs/apk/mock/debug/app-mock-debug.apk
#            --use-orchestrator
            --test app/build/outputs/apk/androidTest/mock/debug/app-mock-debug-androidTest.apk
            --results-history-name 'Horrock Sample app UI tests'
#            --results-bucket gs://horrocks-parent.appspot.com/
#            --result-dir
            >>gcloudlog.log 2>&1
      - run:
          name: Install gsutil dependency
          command: |
            sudo pip install -U crcmod
      - run:
          name: Extract bucket name and result dir and copy test results data
          command: |
            BUCKET = $(grep -oP "(?<=browser\/).*(?<=\/)" ${CIRCLE_ARTIFACTS}/gcloudlog.log)
            RESULT_DIR = $(grep -oP "(?<=browser\/${BUCKET}\/).*(?<=\/)" ${CIRCLE_ARTIFACTS}/gcloudlog.log)
            sudo gsutil -m cp -r -U `sudo gsutil ls ${BUCKET}/${RESULT_DIR} | tail -1` ${CIRCLE_ARTIFACTS}/ | true
#            del ${CIRCLE_ARTIFACTS}/gcloudlog.log
